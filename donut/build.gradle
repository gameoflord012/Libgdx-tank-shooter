plugins {
    id 'java'
    id 'java-library'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    api rootProject.project(':donut:api')
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.5.0'
}

sourceCompatibility = 11
sourceSets.main.java.srcDirs = ["editor/src/main"]
sourceSets.main.resources.srcDirs += ["editor/resources/test"]

sourceSets.test.java.srcDirs = ["editor/src/test"]
sourceSets.main.resources.srcDirs += ["editor/resources/main"]

project.ext.mainClassName = 'donut.editor.core.DonutEditorLauncher'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                'Implementation-Version': version,
                'Main-Class': project.mainClassName
    }
}

dependencies {
    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.32'
    implementation group: 'org.json', name: 'json', version: '20230618'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    testImplementation('junit:junit:4.13.1')
}

task runEditor(dependsOn: classes, type: JavaExec) {
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath

    standardInput = System.in
    ignoreExitValue = true
}

task debugEditor(dependsOn: classes, type: JavaExec) {
    mainClass = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath

    standardInput = System.in
    ignoreExitValue = true
    debug = true
}

targetCompatibility = JavaVersion.VERSION_11
